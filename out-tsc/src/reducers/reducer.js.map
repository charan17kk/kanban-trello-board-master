{"version":3,"file":"reducer.js","sourceRoot":"","sources":["../../../src/reducers/reducer.ts"],"names":[],"mappings":"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","sourcesContent":["import { BacklogListData, BlockedListData, kanbanBoardTaskDataImpl, CompletedListData, InProgressListData, PageDataStateFactory, TestingListData } from '../models';\nimport { actionTypes as at } from '../actions/constants';\nimport { PageData } from 'kanban-board-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst startState = PageDataStateFactory.buildPageData();\n\nexport function reducer(state = startState, action: any) {\n  switch (action.type) {\n\n    case at.CHANGE_BOARD: {\n      const {boardId} = action;\n      return <PageData>{\n        ...state,\n        selectedBoard: boardId\n      };\n    }\n\n    case at.CREATE_BOARD: {\n      const len = state.boards.size + 1;\n      const allBoards = state.boards.set(uuidv4(), {\n        title: \"Board \" + len,\n        backlogList: BacklogListData,\n        blockedList: BlockedListData,\n        inProgressList: InProgressListData,\n        testingList: TestingListData,\n        completedList: CompletedListData\n    });\n      return <PageData>{\n        ...state,\n        boards: allBoards\n      };\n    }\n\n    case at.ADD_TASK: {\n      const { boardId, taskType, taskData } = action;\n    \n      const originalBoard = state.boards.get(boardId);\n      if (!originalBoard) {\n        return state;\n      }\n    \n      const updatedBoard = {\n        ...originalBoard,\n        [taskType]: {\n          //@ts-ignore\n          ...originalBoard[taskType],\n          //@ts-ignore\n          tasks: originalBoard[taskType] ? [...originalBoard[taskType].tasks, taskData] : [taskData]\n        }\n      };\n    \n      const allBoards = new Map(state.boards).set(boardId, updatedBoard);\n    \n      return {\n        ...state,\n        boards: allBoards\n      };\n    }\n    \n\n    case at.ADD_DRAGGED_TASK: {\n      const {taskData} = action;\n      return <PageData>{\n        ...state,\n        draggedTask: taskData\n      };\n    }\n\n    case at.DROP_DRAGGED_TASK: {\n      const {boardId, taskType} = action;\n      const {draggedTask: taskData} = state;\n      let updatedBoard = state.boards.get(boardId);\n      const boardListTypes = ['backlogList', 'blockedList', 'completedList', 'inProgressList', 'testingList'];\n      //@ts-ignore\n      Object.keys(updatedBoard).map(key => {\n        if(boardListTypes.includes(key)) {\n          updatedBoard = Object.assign({}, updatedBoard, {\n            [key]: {\n              //@ts-ignore\n              ...updatedBoard[key],\n              //@ts-ignore\n              tasks: updatedBoard[key].tasks.filter(item => item.id !== taskData.id)\n            }\n          })\n        }\n      })\n      //@ts-ignore\n      updatedBoard[taskType].tasks.push(taskData);\n      //@ts-ignore\n      const allBoards = state.boards.set(boardId, updatedBoard);\n      return <PageData>{\n        ...state,\n        boards: allBoards,\n        draggedTask: new kanbanBoardTaskDataImpl()\n      };\n    }\n\n    default:\n      return state\n  }\n}"]}